name: Package Issues to JSON

on:
  issues:
    types: [opened, edited, closed, reopened, deleted]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  package_issues:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Fetch only OPEN issues from GitHub API
        run: |
          curl -X GET 'https://api.github.com/repos/${{ github.repository }}/issues?state=open&labels=%E5%8F%8B%E9%93%BE%E7%94%B3%E8%AF%B7&per_page=100' \
            -H 'Accept: application/vnd.github.v3+json' \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -o issues.json
          echo "Fetched issues:"
          cat issues.json

      - name: Parse issues to JSON array with ID
        run: |
          mkdir -p out
          jq -r '.[] | select(.body != null and .body != "") | @base64' issues.json | while read issue; do
            _jq() {
              echo "${issue}" | base64 --decode | jq -r "${1}"
            }
            # 把 \n 转成换行符
            body=$(_jq '.body' | sed 's/\\n/\n/g')

            title=$(echo "$body" | grep -A 1 '### 网站名称'    | tail -n 1 | xargs)
            content=$(echo "$body" | grep -A 1 '### 站点介绍'  | tail -n 1 | xargs)
            href=$(echo "$body"   | grep -A 1 '### 网站链接'  | tail -n 1 | xargs)
            icon=$(echo "$body"   | grep -A 1 '### 网站图标链接' | tail -n 1 | xargs)

            id=$(_jq '.number')

            printf '{\n  "id": %s,\n  "title": "%s",\n  "content": "%s",\n  "href": "%s",\n  "icon": "%s"\n}\n' \
              "$id" "$title" "$content" "$href" "$icon" > out/$id.json
          done

          if [ "$(ls out | wc -l)" -eq 0 ]; then
            echo '[]' > issues.json
          else
            jq -s '.' out/*.json > issues.json
          fi

          echo "Parsed JSON array:"
          cat issues.json

      - name: Upload to Cloudflare R2
        env:
          AWS_ACCESS_KEY_ID:     ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}
        run: |
          pip install awscli
          aws s3 cp issues.json s3://blog/data/json/issues.json \
            --endpoint-url https://05b69c2cf1cc6b7312bd86130ff3d5f3.r2.cloudflarestorage.com \
            --region auto \
            --acl public-read