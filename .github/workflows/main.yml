name: Package Issues to JSON

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  issues:
    types: [opened, edited, closed, deleted, labeled, unlabeled]

jobs:
  package_issues:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Fetch issues from GitHub API
      run: |
        curl -X GET 'https://api.github.com/repos/${{ github.repository }}/issues?state=all&labels=%E5%8F%8B%E9%93%BE%E6%8F%90%E4%BA%A4' \
        -H 'Accept: application/vnd.github.v3+json' \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        -o issues.json

        echo "Fetched issues content:"
        cat issues.json

    - name: Parse issues to array JSON
      run: |
        mkdir -p out
        jq -r '.[] | @base64' issues.json | while read issue; do
          _jq() {
            echo ${issue} | base64 --decode | jq -r ${1}
          }

          body=$(_jq '.body')

          title=$(echo "$body" | grep -A 1 '### 网站名称' | tail -n 1 | xargs)
          content=$(echo "$body" | grep -A 1 '### 站点介绍' | tail -n 1 | xargs)
          href=$(echo "$body" | grep -A 1 '### 网站链接' | tail -n 1 | xargs)
          icon=$(echo "$body" | grep -A 1 '### 网站图标链接' | tail -n 1 | xargs)

          cat <<EOF > out/$(_jq '.number').json
{
  "title": "$title",
  "content": "$content",
  "href": "$href",
  "icon": "$icon"
}
EOF
        done

        jq -s '.' out/*.json > issues.json
        cat issues.json

    - name: Upload to Cloudflare R2
      run: |
        pip install awscli
        aws s3 cp issues.json s3://blog/data/json/issues.json \
        --endpoint-url https://05b69c2cf1cc6b7312bd86130ff3d5f3.r2.cloudflarestorage.com \
        --region auto \
        --no-sign-request \
        --profile default \
        --acl public-read
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.CLOUDFLARE_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.CLOUDFLARE_SECRET_ACCESS_KEY }}