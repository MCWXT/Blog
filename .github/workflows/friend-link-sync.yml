name: 友链申请同步到外部API

on:
  issues:
    types: [opened, edited, closed, reopened, deleted]

jobs:
  sync_friend_link:
    runs-on: ubuntu-latest
    
    steps:
      - name: 处理友链申请
        env:
          API_KEY: ${{ secrets.FRIEND_LINK_API_KEY }}
        run: |
          # 设置变量
          ACTION="${{ github.event.action }}"
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          API_URL="https://blog-lac-eight-xt1307ke5s.vercel.app/issues/friendlink/$ACTION"
          
          # 删除事件 - 只发送issue_number
          if [ "$ACTION" = "deleted" ]; then
            curl -X POST "$API_URL" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $API_KEY" \
              -d "{\"issue_number\": $ISSUE_NUMBER}"
          else
            # 提取表单数据
            BODY='${{ github.event.issue.body }}'
            
            extract_field() {
              echo "$BODY" | awk -v field="$1" -v next_field="$2" '
                $0 ~ "### " field { found=1; next }
                $0 ~ "### " next_field { found=0 }
                found && NF { print $0 }
              ' | sed 's/^[[:space:]]*//; s/[[:space:]]*$//'
            }
            
            TITLE=$(extract_field "📝 网站名称" "💬 站点介绍")
            BRIEF=$(extract_field "💬 站点介绍" "🔗 网站链接") 
            URL=$(extract_field "🔗 网站链接" "🖼️ 网站图标链接")
            ICON=$(extract_field "🖼️ 网站图标链接" "📋 备注信息")
            REMARKS=$(extract_field "📋 备注信息" "")
            
            # 构建JSON数据 - 使用printf避免引号问题
            JSON_STRING=$(printf '{"issue_number": %s, "issue_title": "%s", "issue_state": "%s", "issue_url": "%s", "created_at": "%s", "updated_at": "%s", "user_login": "%s", "user_url": "%s", "site_title": "%s", "site_brief": "%s", "site_url": "%s", "site_icon": "%s", "remarks": "%s", "repository": "%s"}' "$ISSUE_NUMBER" "${{ github.event.issue.title }}" "${{ github.event.issue.state }}" "${{ github.event.issue.html_url }}" "${{ github.event.issue.created_at }}" "${{ github.event.issue.updated_at }}" "${{ github.event.issue.user.login }}" "${{ github.event.issue.user.html_url }}" "$TITLE" "$BRIEF" "$URL" "$ICON" "$REMARKS" "${{ github.repository }}")
            
            # 发送到API
            curl -X POST "$API_URL" \
              -H "Content-Type: application/json" \
              -H "Authorization: Bearer $API_KEY" \
              -d "$JSON_STRING"
          fi